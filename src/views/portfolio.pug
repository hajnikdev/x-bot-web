- var localGlobal = htmlWebpackPlugin.options.options.local;
- var local = htmlWebpackPlugin.options.options.local.subpages;
- var client = htmlWebpackPlugin.options.options.client;
- var clientCode = htmlWebpackPlugin.options.options.clientCode;
- var navigation = htmlWebpackPlugin.options.options.navigation;
- var languages = htmlWebpackPlugin.options.options.languages;
- var rel = !htmlWebpackPlugin.options.options.isDefault ? '../../' : '../';
html(lang=localGlobal.meta.code)
	head
		meta(charset="UTF-8")
		meta(name="viewport", content="width=device-width, initial-scale=1.0")
		meta(http-equiv="X-UA-Compatible", content="ie=edge")
		meta(name="author", content="Maroš Hajník")
		meta(name="keywords", content=localGlobal.meta.keywords)
		meta(name="description", content=localGlobal.meta.description)
		meta(property='og:url' content=localGlobal.meta.ogURL)
		meta(property='og:title' content=localGlobal.meta.title)
		meta(property='og:description' content=localGlobal.meta.description)
		title !{localGlobal.meta.title}

		link(rel="shortcut icon", href=rel+"assets/favicon.png", type="image/x-icon")
		link(rel="apple-touch-icon", href=rel+"assets/favicon.png")

		link(href="https://unpkg.com/aos@2.3.1/dist/aos.css", rel="stylesheet")
		<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
		link(rel="stylesheet", href=rel+"main.css")

		script(src=rel+"assets/bootstrap/jquery-3.4.1.slim.min.js")
		script(src=rel+"assets/bootstrap/popper.min.js")
		script(src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js", integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6", crossorigin="anonymous")

		script(async,src="https://www.googletagmanager.com/gtag/js?id=UA-68042186-1")

		script.
			(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
			new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
			j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
			'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
			})(window,document,'script','dataLayer','GTM-WPDQZS6');

		script.
			(function(h,o,t,j,a,r){
				h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};
				h._hjSettings={hjid:1119387,hjsv:6};
				a=o.getElementsByTagName('head')[0];
				r=o.createElement('script');r.async=1;
				r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;
				a.appendChild(r);
			})(window,document,'https://static.hotjar.com/c/hotjar-','.js?sv=');

		script.
			window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);};gtag('js', new Date());
			gtag('config', 'AW-785172836');
			function contactFormOnSubmit() {
				gtag('event', 'conversion', {'send_to': 'AW-785172836/EPMtCJqC1ooBEOSSs_YC'});
				gtag('event', 'formulara', {'event_category': 'odoslanie','event_label': 'prve'});
			}
	body(class='subpage-client client-' + clientCode)
		noscript
			iframe(src="https://www.googletagmanager.com/ns.html?id=GTM-WPDQZS6",height="0",width="0",style="display:none;visibility:hidden")
		header.client-header(style='background-image:url(' + rel + 'assets/clients/' + clientCode + '/' + client.header.background + ')')
			.client-container
				.d-flex.justify-content-between
					a.main-header__logo(href="../")
						img(src=rel+"assets/xolution-logo.svg", alt="logo")
					a(href="#").nav-hamburger
						.nav-hamburger__ham
					nav#nav_main.navigation
						img(src=rel+"assets/xolution-logo.svg", alt="logo")
						a.navigation__close(href="#")
							.navigation__close__cross
							.navigation__close__cross
						.navigation__nav-links
							each link in local.navigation
								a.navigation__nav-link(href=link.link, class=link.class)= link.label

							div.navigation__nav-link.dropdown
								a.btn.btn-secondary.dropdown-toggle(href="#",role="button",id="dropdownMenuLink",data-toggle="dropdown",aria-haspopup="true",aria-expanded="false")= languages[0] === 'CS' ? 'CZ' : languages[0]
								div.dropdown-menu(aria-labelledby="dropdownMenuLink")
									-var l = 0
									while l < languages.length - 1
										a.dropdown-item(href=rel + languages[++l] + '/clients/' + clientCode + '.html')= languages[l] === 'CS' ? 'CZ' : languages[l]

				.client-header__introduction
					img(src=rel+"assets/xbot-logo-white.svg", alt="")
					h1 !{client.header.title.split('\n').join('<br>')}
					.client-header__introduction__squares
						.introduction__square !{client.header.boxes[0].split('\n').join('<br>')}
						if client.header.boxes[1].text
							.introduction__square
								span !{client.header.boxes[1].text}
								if client.header.boxes[1].author
									p !{client.header.boxes[1].author}
						else
							.introduction__square= client.header.boxes[1]

		if client.challenge
			if client.challenge.background
				section.client-challenge(style='background-image:url(' + rel + 'assets/clients/' + clientCode + '/' + client.challenge.background + ')')
					.container
						h1 !{client.challenge.title}
						.challenge__content
							each paragraph in client.challenge.paragraphs
								p !{paragraph}
			else
				section.client-challenge
					.container
						h1 !{client.challenge.title}
						.challenge__content
							each paragraph in client.challenge.paragraphs
								p !{paragraph}

		if client.client
			section.client-requirements
				.client-container
					.row
						.col-md-5
							h1= (client.client.requirementsHeader ? client.client.requirementsHeader : local.portfolio.client.requirements)
							p= client.client.requirements
						.col-md-7
							h1= (client.client.solutionHeader ? client.client.solutionHeader : local.portfolio.client.solution)
							ul
								- for (var solution of client.client.solution)
									li= solution

					if client.client.telephone
						img.client-requirements__phone(src=rel+"assets/clients/"+clientCode+'/telefon.png', alt="")

		if client.process && local.portfolio
			section.client-process(style='background-image:url(' + rel + 'assets/clients/' + clientCode + '/' + client.process.background + ')')
				.client-container
					.row
						.col-md-6
							h1= (client.process.header ? client.process.header : local.portfolio.process.header)
							.dashed-arrow
								.dashed-arrow__line
								.dashed-arrow__triangle
						.col-md-6
							if client.process.steps
								ul
									- var idx = 0;
									- for (var step of client.process.steps)
										- idx++;
										li
											div.client-process__step= idx + '.'
											|!{step}
							if client.process.text
								p= client.process.text

		if client.solution
			section.client-solution(
				style=client.solution.background ? 'background-image:url(' + rel + 'assets/clients/' + clientCode + '/' + client.solution.background + ')' : null
			)
				.container
					h1 !{client.solution.title}
					.dashed-arrow
						.dashed-arrow__line
						.dashed-arrow__triangle
					.solution__content
						strong !{client.solution.content.strong}
						p !{client.solution.content.paragraph}
				.solution-info-container
					.row
						each item in client.solution.items
							.solution-info__info.col-md-4
								img(src=rel+"assets/clients/"+clientCode+"/"+item.icon.src, alt=item.icon.alt)
								if item.headline
									h3 !{item.headline}
								h4 !{item.text}

		if client.project_info && local.portfolio.project_info.categories
			section.project-info
				.client-container
					- var icons = local.portfolio.project_info.categories
					.row
						- for (var infoCategory in client.project_info)
							.project-info__info.col-md-4
								img(src=rel+"assets/"+icons[infoCategory].image, alt="")
								h4= icons[infoCategory].title
								h1= client.project_info[infoCategory]

		if client.results
			section.results(
				style=client.results.background ? 'background-image:url(' + rel + 'assets/clients/' + clientCode + '/' + client.results.background + ')' : null
			)
				.container
					h1= (client.results.header ? client.results.header : local.portfolio.results.header)
					p= client.results.text
					.results-container.row
						- for (var result of client.results.items)
							.result.col-md-4
								h4= result.title
								p= result.text
		if client.resultsBig
			section.client-result-big(
				style=client.resultsBig.background ? 'background-image:url(' + rel + 'assets/clients/' + clientCode + '/' + client.resultsBig.background + ')' : null
			)
				.container
					h1 !{client.resultsBig.title}
					.result-info-container
						.row
							each item in client.resultsBig.items
								.result-info__info.col-md-4
									h1 !{item.title}
									h4 !{item.text}
					.result__content
						p !{client.resultsBig.paragraph}

		if client.outcomes
			section.outcomes
				.container
					.results-container
						h1= local.portfolio.outcomes.header
						- for (var result of client.outcomes)
							.result
								.result-container
									h4 !{result.title.split('\n').join('<br>')}
									p= result.text
									.arrow
		if client.fact
			section.fact
				.container
					if client.fact.image
						img(src=rel+"assets/clients/"+clientCode+'/'+client.fact.image, alt="")
					h1= local.portfolio.fact.header
					p= client.fact.text
					if client.fact.msAwards
						img.ms-award(src=rel+"assets/ms-awards-2021.svg", alt="")

		if client.award
			section.client-award(
				style=client.award.background ? 'background-image:url(' + rel + 'assets/clients/' + clientCode + '/' + client.award.background + ')' : null
			)
				.container
					h1 !{client.award.title}
					if client.award.content
						.award__content !{client.award.content}
					if client.award.items
						.award__content
							each item in client.award.items
								p !{item}

		if client.client_opinion
			section.client-opinion
				.container
					h1= local.portfolio.client_opinion.header
					.client-opinion__content
						if client.client_opinion.paragraphs
							each item in client.client_opinion.paragraphs
								if item.type && item.type == "strong"
									p(style=(item.isAuthor ? "margin-bottom: 2em": ""))
										strong.client-opinion__author !{item.text}
								else
									p(style=(item.isAuthor ? "margin-bottom: 2em": "")) !{item.text}

		if client.client_info
			section.client-info
				.client-info__presentation
					- for (var img of client.client_info.images)
						.client-info__presentation__image
							.client-info__presentation__image__inside(style='background-image:url(' + rel + 'assets/clients/' + clientCode + '/' + img + ')')
					.client-info__presentation__gradient
				.client-container.client-info__content= client.client_info.text
		if client.whats_next
			section.portfolio-whats-next
				.container
					h1= local.portfolio.whats_next.header
					p !{client.whats_next.text.split('\n').join('<br>')}

		if client.fact_comap
			section.fact
				.container
					if client.fact_comap.image
						img(src=rel+"assets/clients/"+clientCode+'/'+client.fact_comap.image, alt="")
					h1= client.fact_comap.header
					p= client.fact_comap.text
					if client.fact_comap.msAwards
						img.ms-award(src=rel+"assets/ms-awards-2021.svg", alt="")

		section.portfolio-cta
			.portfolio-cta__content
				.row
					.col-md-5
						h1= local.portfolio.cta.title
						.dashed-arrow
							.dashed-arrow__line
							.dashed-arrow__triangle
					.col-md-7
						a(href='#contact')
							span= local.portfolio.cta.write
						a(href='#contact')
							span= local.portfolio.cta.call

		section.portfolio-navigation
			.client-container
				.row
					.col-md-6.text-center.text-md-left
						a(href=navigation[0] + '.html') !{local.portfolio.navigation_article.prev}
					.col-md-6.text-center.text-md-right
						a(href=navigation[1] + '.html') !{local.portfolio.navigation_article.next}

		footer.xbot-footer
			.container
				a.logo(href="#top")
					img(src=rel+"assets/xbot-logo.svg", alt="logo")
				.spacer
				p Powered by Xolution s.r.o.
				nav.navigation
					each link in local.navigation
							a.navigation__nav-link(href=link.link)= link.label

		a.linkedin-float(title="Xolution LinkedIn", target="_blank", href="https://www.linkedin.com/company/xolution-europe")
			img(src=rel+"assets/linkedin.png", alt="linkedin")

		.contact-form
			.contact-form__content
				.contact-form__form
					.contact-form__form__form
						h1= localGlobal.contact_form.header
						p= localGlobal.contact_form.info
						form
							#email_validation_wrap
								input#contact_email(type="text",placeholder="E-mail")
								div.error Please enter valid e-mail address
							textarea#contact_message(type="text",placeholder=localGlobal.contact_form.phone)
							input#contact_submit(type="submit",value=localGlobal.contact_form.submit,data-sending=localGlobal.contact_form.submit_progress)
					.contact-form__form__thanks
						h1= localGlobal.contact_form.thanks
						p= localGlobal.contact_form.subthanks
			a(href='#').contact-form__close
				img(src=rel+"assets/close-button.svg")

		script(src="https://unpkg.com/aos@2.3.1/dist/aos.js")
		script(src=rel+"chatbots.js")
